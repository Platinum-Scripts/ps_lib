name: Release

on:
  push:
    branches:
      - main

jobs:
  check-commit-message:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract-version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Extract version from commit message
        id: extract-version
        run: |
          VERSION_REGEX='^v[0-9]+\.[0-9]+\.[0-9]+$'
          VERSION=$(git log --format=%B -n 1 HEAD | grep -oP "$VERSION_REGEX")
          if [[ $VERSION == "" ]]; then
            echo "Version not found in commit message."
            exit 1
          fi
          echo "Version: $VERSION"
          echo "::set-output name=version::$VERSION"
  create-release:
    name: Build and Create Tagged Release
    runs-on: ubuntu-latest
    steps:
      - name: Install archive tools
        run: sudo apt install zip

      - name: Checkout source code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ github.event.repository.default_branch }}

      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Bump manifest version
        run: node .github/actions/bump-manifest-version.js
        env:
          TGT_RELEASE_VERSION: ${{ needs.check-commit-message.outputs.version }}

      - name: Push manifest change
        uses: EndBug/add-and-commit@v8
        with:
          add: fxmanifest.lua
          push: true
          author_name: Manifest Bumper
          author_email: 41898282+github-actions[bot]@users.noreply.github.com
          message: "chore: bump manifest version to ${{ needs.check-commit-message.outputs.version }}"

      - name: Update tag ref
        uses: EndBug/latest-tag@latest
        with:
          tag-name: ${{ needs.check-commit-message.outputs.version }}

      - name: Bundle files
        run: |
          mkdir -p ./temp/ps_lib
          mkdir -p ./temp/ps_lib/web/
          cp ./{LICENSE,README.md,fxmanifest.lua,init.lua} ./temp/ps_lib
          cp -r ./{imports,resource,locales} ./temp/ps_lib
          cp -r ./web/build ./temp/ps_lib/web/
          cd ./temp && zip -r ../ps_lib.zip ./ps_lib

      - name: Create Release
        uses: "marvinpinto/action-automatic-releases@v1.2.1"
        id: auto_release
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          title: ${{ env.RELEASE_VERSION }}
          prerelease: false
          files: ps_lib.zip

        env:
          CI: false
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish npm package
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_TOKEN }}
          package: './package/package.json'
          access: 'public'